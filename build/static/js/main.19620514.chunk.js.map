{"version":3,"sources":["components/List.jsx","components/Form.jsx","components/Filter.jsx","services/persons.js","components/Notification.jsx","services/notification.js","App.js","index.js"],"names":["List","persons","namefilter","button","filter","p","name","toLowerCase","indexOf","map","o","number","value","id","onClick","Form","namechange","numberchange","add","onSubmit","onChange","type","Filter","val","change","baseUrl","axios","get","then","response","data","obj","post","console","log","delete","put","Notification","notification","class","message","setter","setTimeout","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","personsService","event","target","preventDefault","person","find","i","window","confirm","catch","error","concat","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19620514.chunk.js","sourcesContent":["const List = ({ persons, namefilter, button }) => {\n  return persons\n    .filter((p) => {\n      return p.name.toLowerCase().indexOf(namefilter.toLowerCase()) >= 0;\n    })\n    .map((o) => {\n      return (\n        <div key={o.name}>\n          {o.name} {o.number}{' '}\n          <button value={o.id} onClick={button}>\n            delete\n          </button>\n        </div>\n      );\n    });\n};\n\nexport default List;\n","const Form = ({ name, namechange, number, numberchange, add }) => {\n  return (\n    <div>\n      <form onSubmit={add}>\n        <div>\n          name: <input value={name} onChange={namechange} />\n        </div>\n        <div>\n          number: <input value={number} onChange={numberchange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","const Filter = ({ val, change }) => {\n  return (\n    <div>\n      filter shown with <input value={val} onChange={change} />{' '}\n    </div>\n  );\n};\n\nexport default Filter;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (obj) => {\n  return axios.post(baseUrl, obj).then((response) => response.data);\n};\n\nconst remove = (id) => {\n  console.log(id);\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nconst update = (id, data) => {\n  return axios.put(`${baseUrl}/${id}`, data).then((response) => response.data);\n};\nexport default {\n  getAll: getAll,\n  create: create,\n  remove: remove,\n  update: update,\n};\n","const Notification = ({ notification }) => {\n  if (!notification) {\n    return null;\n  }\n\n  return <div class={notification.type}>{notification.message}</div>;\n};\n\nexport default Notification;\n","const success = (message, setter) => {\n  setter({ message, type: 'success' });\n  setTimeout(() => {\n    setter(null);\n  }, 5000);\n};\n\nconst failure = (message, setter) => {\n  setter({ message, type: 'error' });\n  setTimeout(() => {\n    setter(null);\n  }, 5000);\n};\n\nexport default {\n  success: success,\n  failure: failure,\n};\n","import React, { useState, useEffect } from 'react';\n\nimport List from './components/List';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\n\nimport personsService from './services/persons';\nimport Notification from './components/Notification';\nimport notification from './services/notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [namefilter, setFilter] = useState('');\n  const [errorMessage, setErrorMessage] = useState({});\n  useEffect(() => {\n    personsService.getAll().then((data) => {\n      setPersons(data);\n    });\n  }, []);\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const person = persons.find((i) => i.name === newName);\n    if (person) {\n      if (\n        window.confirm(\n          `${newName} already added to phonebook, replace the old number with new one?`\n        )\n      ) {\n        personsService\n          .update(person.id, { ...person, number: newNumber })\n          .then((data) => {\n            setPersons(\n              persons.map((p) => {\n                if (p.id === data.id) {\n                  return data;\n                }\n                return p;\n              })\n            );\n            notification.success(`Updated ${data.name}`, setErrorMessage);\n          })\n          .catch((error) => {\n            notification.failure(\n              `Information of ${person.name} already removed.`,\n              setErrorMessage\n            );\n            setPersons(persons.filter((p) => p.id !== person.id));\n          });\n      }\n      return;\n    }\n    personsService\n      .create({ name: newName, number: newNumber })\n      .then((data) => {\n        setPersons(persons.concat(data));\n        setNewName('');\n        setNewNumber('');\n        notification.success(`Added ${data.name}`, setErrorMessage);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        notification.failure(err.response.data.error, setErrorMessage);\n      });\n  };\n\n  const removeButton = (event) => {\n    let name = persons.find((p) => p.id === event.target.value).name;\n    if (window.confirm(`Delete ${name} ?`)) {\n      personsService.remove(event.target.value).then((data) => {\n        setPersons(persons.filter((p) => p.id !== event.target.value));\n      });\n      notification.success(`Deleted ${name}`, setErrorMessage);\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={errorMessage} />\n      <Filter val={namefilter} change={handleFilter} />\n      <h2>add a new</h2>\n      <Form\n        name={newName}\n        namechange={handleNameChange}\n        number={newNumber}\n        numberchange={handleNumberChange}\n        add={addPerson}\n      />\n      <h2>Numbers</h2>\n      <List persons={persons} namefilter={namefilter} button={removeButton} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}